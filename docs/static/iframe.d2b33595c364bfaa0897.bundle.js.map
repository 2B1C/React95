{"version":3,"file":"static/iframe.d2b33595c364bfaa0897.bundle.js","sources":["webpack:///./components/Modal/Modal.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { css } from 'styled-components';\nimport Draggable from 'react-draggable';\nimport Btn from '../shared-style/Btn';\nimport Button from '../Button';\nimport Icon from '../Icon';\n\nconst ModalWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  position: fixed;\n  padding: 2px 3px;\n  min-width: 300px;\n  min-height: 200px;\n\n  top: 50px;\n\n  background-color: #c3c7cb;\n\n  box-shadow: inset 1px 1px 0px 1px #ffffff, inset 0 0 0 1px #868a8e,\n    1px 1px 0 1px #000;\n`;\n\nconst TitleBar = styled.div`\n  margin-bottom: 2px;\n\n  background-color: #00007f;\n  color: white;\n  padding: 2px 4px;\n\n  display: flex;\n`;\n\nconst Title = styled.div`\n  flex-grow: 1;\n`;\n\nconst OptionsBox = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0;\n\n  display: flex;\n`;\n\nconst Option = styled(Btn)`\n  margin-right: 3px;\n  padding: 0 0 0 1px;\n\n  width: 17px;\n  height: 17px;\n  min-width: 0;\n\n  font-size: 10px;\n\n  &:last-child {\n    margin-right: 0;\n  }\n\n  &:active {\n    padding: 1px 0 0 1px;\n\n    outline: none;\n\n    box-shadow: inset 0 0 0 1px #868a8e, 0 0 0 1px #000;\n  }\n`;\n\nconst Content = styled.div`\n  flex-grow: 1;\n  display: flex;\n  flex-direction: column;\n\n  padding: 6px;\n`;\n\nconst ButtonWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n\n  padding: 0 6px 6px 6px;\n\n  & ${Btn} {\n    margin-right: 6px;\n    min-width: 80px;\n\n    &:last-child {\n      margin-right: 0;\n    }\n  }\n`;\n\nconst MenuWrapper = styled.ul`\n  display: flex;\n  flex-direction: row;\n\n  list-style: none;\n  margin: 0;\n  padding-left: 0;\n  padding-bottom: 3px;\n\n  border-bottom-style: solid;\n  border-bottom-width: 1px;\n  border-bottom-color: #848284;\n\n  box-shadow: 0 1px 0 0 #e6e6e6;\n`;\n\nconst MenuItem = styled.li`\n  position: relative;\n  padding-left: 6px;\n  padding-right: 6px;\n\n  user-select: none;\n\n  ul {\n    position: absolute;\n    left: 0;\n    color: #000;\n  }\n\n  ${({ active }) =>\n    active &&\n    `\n      background-color: #00007f;\n      color: #FFF;\n    `};\n`;\n\nclass Modal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      menuOpened: '',\n    };\n  }\n\n  _menuClick = menuOpened => {\n    this.setState({ menuOpened });\n  };\n\n  _resetState = () => {\n    this.setState({ menuOpened: '' });\n  };\n\n  render() {\n    const {\n      closeModal,\n      title,\n      children,\n      buttons,\n      icon,\n      menu,\n      top,\n      left,\n    } = this.props;\n\n    const iconStyle = {\n      width: 16,\n      height: 19,\n      style: {\n        marginRight: '4px',\n      },\n    };\n\n    const position = {\n      top,\n      left,\n    };\n\n    return (\n      <React.Fragment>\n        <Draggable handle=\".draggable\">\n          <ModalWrapper style={position}>\n            <TitleBar className=\"draggable\">\n              {icon && <Icon name={icon} {...iconStyle} />}\n              <Title>{title}</Title>\n              <OptionsBox>\n                <Option>?</Option>\n                <Option onClick={closeModal}>x</Option>\n              </OptionsBox>\n            </TitleBar>\n\n            {menu && (\n              <MenuWrapper>\n                {menu.map(({ name, list }) => {\n                  const active = this.state.menuOpened === name;\n                  return (\n                    <MenuItem\n                      key={name}\n                      onMouseDown={() => this._menuClick(name)}\n                      active={active}\n                    >\n                      {name}\n                      {active && list}\n                    </MenuItem>\n                  );\n                })}\n              </MenuWrapper>\n            )}\n\n            <Content onClick={this._resetState}>{children}</Content>\n            {buttons && (\n              <ButtonWrapper>\n                {buttons.map((button, index) => (\n                  <Button\n                    key={index}\n                    onClick={button.onClick}\n                    value={button.value}\n                  />\n                ))}\n              </ButtonWrapper>\n            )}\n          </ModalWrapper>\n        </Draggable>\n      </React.Fragment>\n    );\n  }\n}\n\nModal.displayName = 'Modal';\n\nModal.propTypes = {\n  icon: PropTypes.string,\n  closeModal: PropTypes.func,\n  title: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n  buttons: PropTypes.arrayOf(\n    PropTypes.shape({\n      value: PropTypes.string.isRequired,\n      onClick: PropTypes.func,\n    }),\n  ),\n  menu: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      list: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node,\n      ]).isRequired,\n    }),\n  ),\n};\n\nModal.defaultProps = {\n  icon: '',\n  title: 'Modal',\n  chidren: null,\n  buttons: [],\n  menu: [],\n  closeModal: () => {},\n};\n\nexport default Modal;\n"],"mappings":"AAQA","sourceRoot":""}